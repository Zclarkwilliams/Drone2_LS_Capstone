/* Verilog netlist generated by SCUBA Diamond (64-bit) 3.10.1.112 */
/* Module Version: 3.5 */
/* C:\lscc\diamond\3.10_x64\ispfpga\bin\nt64\scuba.exe -w -n adder -lang verilog -synth lse -bus_exp 7 -bb -arch xo3c00f -type add -width 16 -signed -port ci -port overflow -pipeline 0  */
/* Sun Apr 15 16:01:47 2018 */


`timescale 1 ns / 1 ps
module adder (DataA, DataB, Cin, Result, Overflow)/* synthesis NGD_DRC_MASK=1 */;
    input wire [15:0] DataA;
    input wire [15:0] DataB;
    input wire Cin;
    output wire [15:0] Result;
    output wire Overflow;

    wire scuba_vhi;
    wire precin;
    wire co0;
    wire co1;
    wire co2;
    wire co3;
    wire co4;
    wire co5;
    wire co6;
    wire co7;
    wire co_n_1;
    wire co_n;
    wire co_n_t;
    wire scuba_vlo;

    VHI scuba_vhi_inst (.Z(scuba_vhi));

    XOR2 XOR2_t0 (.A(co_n_1), .B(co_n), .Z(Overflow));

    FADD2B precin_inst53 (.A0(scuba_vlo), .A1(scuba_vlo), .B0(scuba_vlo), 
        .B1(scuba_vlo), .CI(scuba_vlo), .COUT(precin), .S0(), .S1());

    FADD2B addsub_0 (.A0(Cin), .A1(DataA[0]), .B0(Cin), .B1(DataB[0]), .CI(precin), 
        .COUT(co0), .S0(), .S1(Result[0]));

    FADD2B addsub_1 (.A0(DataA[1]), .A1(DataA[2]), .B0(DataB[1]), .B1(DataB[2]), 
        .CI(co0), .COUT(co1), .S0(Result[1]), .S1(Result[2]));

    FADD2B addsub_2 (.A0(DataA[3]), .A1(DataA[4]), .B0(DataB[3]), .B1(DataB[4]), 
        .CI(co1), .COUT(co2), .S0(Result[3]), .S1(Result[4]));

    FADD2B addsub_3 (.A0(DataA[5]), .A1(DataA[6]), .B0(DataB[5]), .B1(DataB[6]), 
        .CI(co2), .COUT(co3), .S0(Result[5]), .S1(Result[6]));

    FADD2B addsub_4 (.A0(DataA[7]), .A1(DataA[8]), .B0(DataB[7]), .B1(DataB[8]), 
        .CI(co3), .COUT(co4), .S0(Result[7]), .S1(Result[8]));

    FADD2B addsub_5 (.A0(DataA[9]), .A1(DataA[10]), .B0(DataB[9]), .B1(DataB[10]), 
        .CI(co4), .COUT(co5), .S0(Result[9]), .S1(Result[10]));

    FADD2B addsub_6 (.A0(DataA[11]), .A1(DataA[12]), .B0(DataB[11]), .B1(DataB[12]), 
        .CI(co5), .COUT(co6), .S0(Result[11]), .S1(Result[12]));

    FADD2B addsub_7 (.A0(DataA[13]), .A1(DataA[14]), .B0(DataB[13]), .B1(DataB[14]), 
        .CI(co6), .COUT(co7), .S0(Result[13]), .S1(Result[14]));

    FADD2B addsub_8 (.A0(scuba_vlo), .A1(scuba_vlo), .B0(scuba_vlo), .B1(scuba_vlo), 
        .CI(co7), .COUT(), .S0(co_n_1), .S1());

    FADD2B addsub_o0 (.A0(co_n_1), .A1(DataA[15]), .B0(co_n_1), .B1(DataB[15]), 
        .CI(scuba_vlo), .COUT(co_n_t), .S0(), .S1(Result[15]));

    VLO scuba_vlo_inst (.Z(scuba_vlo));

    FADD2B addsub_o1 (.A0(scuba_vlo), .A1(scuba_vlo), .B0(scuba_vlo), .B1(scuba_vlo), 
        .CI(co_n_t), .COUT(), .S0(co_n), .S1());



    // exemplar begin
    // exemplar end

endmodule
